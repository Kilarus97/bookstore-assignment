// <auto-generated />
using System;
using BookstoreApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookstoreApplication.Migrations
{
    [DbContext(typeof(BookstoreDbContext))]
    [Migration("20250919185749_SetCascadeDeleteForPublisher")]
    partial class SetCascadeDeleteForPublisher
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Birthday");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "Nobelovac",
                            DateOfBirth = new DateTime(1892, 10, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Ivo Andrić"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "Enciklopedista",
                            DateOfBirth = new DateTime(1935, 2, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Danilo Kiš"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "Prva akademkinja",
                            DateOfBirth = new DateTime(1877, 2, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Isidora Sekulić"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Modernista",
                            DateOfBirth = new DateTime(1893, 10, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Miloš Crnjanski"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Satiričar",
                            DateOfBirth = new DateTime(1864, 10, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Branislav Nušić"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.Property<int>("YearReceived")
                        .HasColumnType("integer");

                    b.HasKey("AuthorId", "AwardId");

                    b.HasIndex("AwardId");

                    b.ToTable("AuthorAwardBridge", (string)null);

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AwardId = 3,
                            YearReceived = 1961
                        },
                        new
                        {
                            AuthorId = 1,
                            AwardId = 4,
                            YearReceived = 1976
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 1,
                            YearReceived = 1983
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 4,
                            YearReceived = 1985
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 4,
                            YearReceived = 1930
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 2,
                            YearReceived = 1935
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 1,
                            YearReceived = 1929
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 2,
                            YearReceived = 1931
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 2,
                            YearReceived = 1929
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 1,
                            YearReceived = 1930
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 4,
                            YearReceived = 1932
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 3,
                            YearReceived = 1986
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 3,
                            YearReceived = 1933
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 1,
                            YearReceived = 1936
                        },
                        new
                        {
                            AuthorId = 1,
                            AwardId = 1,
                            YearReceived = 1955
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearEstablished")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Awards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Najbolji roman godine",
                            Name = "NIN-ova nagrada",
                            YearEstablished = 1954
                        },
                        new
                        {
                            Id = 2,
                            Description = "Najbolja drama",
                            Name = "Sterijino pozorje",
                            YearEstablished = 1956
                        },
                        new
                        {
                            Id = 3,
                            Description = "Za književnost",
                            Name = "Nobelova nagrada",
                            YearEstablished = 1901
                        },
                        new
                        {
                            Id = 4,
                            Description = "Za pripovetku",
                            Name = "Andrićeva nagrada",
                            YearEstablished = 1975
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "9780001",
                            PageCount = 320,
                            PublishedDate = new DateTime(1945, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Na Drini ćuprija"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "9780002",
                            PageCount = 210,
                            PublishedDate = new DateTime(1954, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Prokleta avlija"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            ISBN = "9780003",
                            PageCount = 180,
                            PublishedDate = new DateTime(1983, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Enciklopedija mrtvih"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "9780004",
                            PageCount = 200,
                            PublishedDate = new DateTime(1968, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Bašta, pepeo"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            ISBN = "9780005",
                            PageCount = 150,
                            PublishedDate = new DateTime(1930, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Analitički trenuci"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            ISBN = "9780006",
                            PageCount = 120,
                            PublishedDate = new DateTime(1914, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Pisma iz Norveške"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            ISBN = "9780007",
                            PageCount = 400,
                            PublishedDate = new DateTime(1929, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Seobe"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            ISBN = "9780008",
                            PageCount = 100,
                            PublishedDate = new DateTime(1919, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Lirika Itake"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            ISBN = "9780009",
                            PageCount = 130,
                            PublishedDate = new DateTime(1929, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Gospođa ministarka"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            ISBN = "9780010",
                            PageCount = 140,
                            PublishedDate = new DateTime(1906, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Narodni poslanik"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 5,
                            ISBN = "9780011",
                            PageCount = 160,
                            PublishedDate = new DateTime(1924, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Autobiografija"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            ISBN = "9780012",
                            PageCount = 110,
                            PublishedDate = new DateTime(1936, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Dr"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Beograd",
                            Name = "Laguna",
                            Website = "https://laguna.rs"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Novi Sad",
                            Name = "Zavod za udžbenike",
                            Website = "https://zavod.co.rs"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Beograd",
                            Name = "Geopoetika",
                            Website = "https://geopoetika.com"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Award", "Award")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Navigation("AuthorAwards");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Navigation("AuthorAwards");
                });
#pragma warning restore 612, 618
        }
    }
}
